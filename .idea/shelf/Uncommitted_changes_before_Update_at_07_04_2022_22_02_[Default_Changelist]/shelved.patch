Index: app/src/main/java/com/seaID/hivet/KonsultasiActivity.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.seaID.hivet\r\n\r\nimport android.app.Dialog\r\nimport android.content.Intent\r\nimport android.graphics.Color\r\nimport android.graphics.drawable.ColorDrawable\r\nimport android.os.Build\r\nimport androidx.appcompat.app.AppCompatActivity\r\nimport android.os.Bundle\r\nimport android.os.CountDownTimer\r\nimport android.util.Log\r\nimport android.view.View\r\nimport android.view.Window\r\nimport android.widget.AdapterView\r\nimport android.widget.ArrayAdapter\r\nimport android.widget.Toast\r\nimport androidx.annotation.RequiresApi\r\nimport com.bumptech.glide.Glide\r\nimport com.google.firebase.auth.FirebaseAuth\r\nimport com.google.firebase.database.*\r\nimport com.google.firebase.firestore.FirebaseFirestore\r\nimport com.seaID.hivet.adapters.peliharaanAdapter\r\nimport com.seaID.hivet.databinding.ActivityBookingBinding\r\nimport com.seaID.hivet.databinding.ActivityKonsultasiBinding\r\nimport com.seaID.hivet.models.*\r\nimport java.time.LocalDateTime\r\nimport java.time.format.DateTimeFormatter\r\nimport java.time.format.FormatStyle\r\nimport java.util.*\r\n\r\nclass KonsultasiActivity : AppCompatActivity(), AdapterView.OnItemSelectedListener {\r\n\r\n    private lateinit var binding: ActivityKonsultasiBinding\r\n    private lateinit var mDbRef: FirebaseFirestore\r\n    private lateinit var mAuth : FirebaseAuth\r\n    var reference: DatabaseReference? = null\r\n    val pets = ArrayList<String>()\r\n    val idpets = ArrayList<String>()\r\n    var text: String ? = null\r\n    var counter : Int = 0\r\n    var isRunning: Boolean = false;\r\n    lateinit var countdown_timer: CountDownTimer\r\n\r\n\r\n    @RequiresApi(Build.VERSION_CODES.O)\r\n    override fun onCreate(savedInstanceState: Bundle?) {\r\n        super.onCreate(savedInstanceState)\r\n        binding = ActivityKonsultasiBinding.inflate(layoutInflater)\r\n        val view = binding.root\r\n        setContentView(view)\r\n\r\n        val id = intent.getStringExtra(\"Uid\")\r\n        mAuth = FirebaseAuth.getInstance()\r\n\r\n        showData(id.toString())\r\n        dataPeliharaan()\r\n\r\n        binding.konsulBT.setOnClickListener {\r\n            //startActivity(Intent(this, ChatActivity::class.java))\r\n            saveData()\r\n\r\n        }\r\n    }\r\n\r\n    @RequiresApi(Build.VERSION_CODES.O)\r\n    private fun saveData() {\r\n        val id_drh = intent.getStringExtra(\"Uid\")\r\n        val id_user = mAuth.currentUser!!.uid\r\n        val length = 8\r\n        val id : String = getRandomString(length)\r\n        val current = LocalDateTime.now()\r\n        val simpleDateFormat = DateTimeFormatter.ofLocalizedDate(FormatStyle.MEDIUM)\r\n        val formatted = current.format(simpleDateFormat)\r\n        val idpet = idpets.get(binding.peliharaanSP.selectedItemId.toInt())\r\n        val harga = binding.hargaTV.text.toString()\r\n        //Toast.makeText(this, \"Ini \" +idpet, Toast.LENGTH_SHORT).show()\r\n\r\n        val reference = FirebaseDatabase.getInstance().getReference()\r\n        //val konsultasi = konsultasi(id, id_drh, id_user, idpet, formatted, \"1\", \"\", harga.toDouble())\r\n        val hashMap = HashMap<String, Any>()\r\n        hashMap[\"id\"] = id\r\n        hashMap[\"id_drh\"] = id_drh.toString()\r\n        hashMap[\"id_user\"] = id_user\r\n        hashMap[\"id_pet\"] = idpet\r\n        hashMap[\"tanggal\"] = formatted\r\n        hashMap[\"status\"] = \"1\"\r\n        hashMap[\"id_transaction\"] = \"\"\r\n        hashMap[\"harga\"] = harga\r\n        hashMap[\"rating\"] = \"\"\r\n        reference.child(\"konsultasi\").child(id).setValue(hashMap)\r\n            .addOnSuccessListener {\r\n                startTimer(120000, id)\r\n                showDialog()\r\n            }\r\n            .addOnFailureListener {\r\n                Toast.makeText(this, \" \"+it, Toast.LENGTH_SHORT).show()\r\n            }\r\n\r\n        /**val konsultasi = konsultasi(id, id_drh, id_user, idpet, formatted, \"1\", \"\", harga.toDouble())\r\n        mDbRef.collection(\"konsultasi\").document(id).set(konsultasi)\r\n            .addOnCompleteListener {\r\n                startTimer(120000, id)\r\n            }\r\n            .addOnFailureListener { e ->\r\n                //stored data failed\r\n                Toast.makeText(this, \"Action failed due to \" + e.message, Toast.LENGTH_SHORT).show()\r\n            } **/\r\n    }\r\n\r\n    private fun startTimer(time_in_seconds: Long, id : String) {\r\n        countdown_timer = object: CountDownTimer(time_in_seconds, 1000) {\r\n            override fun onTick(millisUntilFinished: Long) {\r\n                cekStatus(id)\r\n            }\r\n\r\n            override fun onFinish() {\r\n                changeStatus(id)\r\n            }\r\n        }\r\n        countdown_timer.start()\r\n\r\n        isRunning = true\r\n\r\n    }\r\n\r\n    private fun showDialog() {\r\n        val dialog = Dialog(this)\r\n        dialog.requestWindowFeature(Window.FEATURE_NO_TITLE)\r\n        dialog.window?.setBackgroundDrawable(ColorDrawable(Color.TRANSPARENT))\r\n        dialog.setContentView(R.layout.popup_notif_konsul)\r\n        if(isRunning == false){\r\n            dialog.dismiss()\r\n        }\r\n        dialog.show()\r\n    }\r\n\r\n\r\n    private fun changeStatus(id : String) {\r\n        //val id = intent.getStringExtra(\"Uid\")\r\n        val reference = FirebaseDatabase.getInstance().getReference(\"konsultasi\")\r\n            reference.child(id).child(\"status\").setValue(\"6\")\r\n    }\r\n\r\n    private fun cekStatus(id: String) {\r\n\r\n        //val data = mDbRef.collection(\"konsultasi\").document(id)\r\n        FirebaseDatabase.getInstance().getReference(\"konsultasi\").child(id)\r\n            .addListenerForSingleValueEvent(object : ValueEventListener{\r\n                override fun onDataChange(snapshot: DataSnapshot) {\r\n                    val data: konsultasi? = snapshot.getValue(konsultasi::class.java)\r\n                    if (data != null) {\r\n                        if (data.id == id && data.status == \"2\"){\r\n                            toPayment(data.id_drh, data.id, data.id_pet, data.tanggal, data.harga!!.toDouble())\r\n                            countdown_timer.cancel()\r\n                            isRunning = false\r\n                        }else if(data.id == id && data.status == \"5\"){\r\n                            Toast.makeText(applicationContext, \"Permintaan Konsultasi Ditolak\", Toast.LENGTH_SHORT).show()\r\n                            countdown_timer.cancel()\r\n                            isRunning = false\r\n\r\n                        }\r\n\r\n                    }\r\n                }\r\n\r\n                override fun onCancelled(error: DatabaseError) {\r\n                    throw error.toException()\r\n                }\r\n\r\n            })\r\n\r\n    }\r\n\r\n    private fun toPayment(idDrh: String?, id: String?, idPet: String?, tanggal: String?, harga: Double?) {\r\n        //Toast.makeText(this, \"ini \"+id, Toast.LENGTH_SHORT).show()\r\n        val intent = Intent(this, KonsulPaymentActivity::class.java)\r\n        intent.flags = Intent.FLAG_ACTIVITY_NEW_TASK or Intent.FLAG_ACTIVITY_CLEAR_TASK\r\n        intent.putExtra(\"nama_drh\", binding.namadrhTV.text)\r\n        intent.putExtra(\"harga\", binding.hargaTV.text)\r\n        intent.putExtra(\"Uid\", idDrh)\r\n        intent.putExtra(\"id\", id)\r\n        intent.putExtra(\"id_pet\", idPet)\r\n        intent.putExtra(\"tanggal\", tanggal)\r\n        intent.putExtra(\"harga\", harga)\r\n        startActivity(intent)\r\n    }\r\n\r\n\r\n    private fun getRandomString(length: Int): String {\r\n        val charset = ('a'..'z') + ('A'..'Z') + ('0'..'9')\r\n        return (1..length)\r\n            .map { charset.random() }\r\n            .joinToString(\"\")\r\n    }\r\n\r\n    override fun onBackPressed() {\r\n        //super.onBackPressed()\r\n        counter++\r\n        if (counter == 1){\r\n            super.onBackPressed()\r\n        }\r\n    }\r\n\r\n    private fun dataPeliharaan() {\r\n        mDbRef.collection(\"peliharaan\")\r\n            .get()\r\n            .addOnSuccessListener {\r\n                val data = it.toObjects(peliharaan::class.java)\r\n                val items = data.size\r\n                if (items > 0){\r\n                    for (item in data){\r\n                        if (item.pemilik == mAuth.uid){\r\n                            idpets.add(item.id!!)\r\n                            pets.add(item.nama!!)\r\n                        }\r\n                    }\r\n                }\r\n                val adapter = ArrayAdapter<String>(this, android.R.layout.simple_spinner_item, pets)\r\n                adapter.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item)\r\n                binding.peliharaanSP.adapter = adapter\r\n                binding.peliharaanSP.onItemSelectedListener = this\r\n            }\r\n    }\r\n\r\n\r\n    private fun showData(id : String) {\r\n        mDbRef = FirebaseFirestore.getInstance()\r\n        val uidRef  = mDbRef.collection(\"drh\").document(id)\r\n\r\n        uidRef.get().addOnSuccessListener { doc ->\r\n            if (doc != null) {\r\n                val user = doc.toObject(drh::class.java)\r\n                binding.namadrhTV.text = user!!.Name\r\n                binding.workExpTV.text = user!!.harga\r\n                binding.hargaTV.text = user!!.harga\r\n                binding.textView.text = \"No STR \"+ user!!.STR\r\n                binding.exp.text = \"Pengalaman \"+user.WorkExp+\" tahun\"\r\n\r\n                if (user!!.photoProfile == \"\"){\r\n                    binding.profileIM.setImageResource(R.drawable.profile)\r\n                }else{\r\n                    Glide.with(this).load(user!!.photoProfile).into(binding.profileIM)\r\n                }\r\n                Toast.makeText(this, \"{$user.name}\", Toast.LENGTH_SHORT).show()\r\n            } else {\r\n                Toast.makeText(this, \"No such document\", Toast.LENGTH_SHORT).show()\r\n            }\r\n        }.addOnFailureListener { exception ->\r\n            Toast.makeText(this, \"get failed with \"+exception, Toast.LENGTH_SHORT).show()\r\n        }\r\n    }\r\n\r\n    override fun onItemSelected(parent: AdapterView<*>?, view: View?, position: Int, id: Long) {\r\n        //text= parent?.getItemAtPosition(position).toString()\r\n        text = idpets.get(position)\r\n    }\r\n\r\n    override fun onNothingSelected(parent: AdapterView<*>?) {\r\n        TODO(\"Not yet implemented\")\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/seaID/hivet/KonsultasiActivity.kt b/app/src/main/java/com/seaID/hivet/KonsultasiActivity.kt
--- a/app/src/main/java/com/seaID/hivet/KonsultasiActivity.kt	(revision 7c4fdbb4fd3fef4f939930c40ebb82f1ab55ab94)
+++ b/app/src/main/java/com/seaID/hivet/KonsultasiActivity.kt	(date 1649149477966)
@@ -62,6 +62,15 @@
         }
     }
 
+    override fun onBackPressed() {
+        //super.onBackPressed()
+        val intent = Intent(this, ListDokterActivity::class.java)
+        intent.flags = Intent.FLAG_ACTIVITY_NEW_TASK or Intent.FLAG_ACTIVITY_CLEAR_TASK
+        intent.putExtra("type", 1)
+        startActivity(intent)
+        finish()
+    }
+
     @RequiresApi(Build.VERSION_CODES.O)
     private fun saveData() {
         val id_drh = intent.getStringExtra("Uid")
@@ -193,14 +202,6 @@
             .joinToString("")
     }
 
-    override fun onBackPressed() {
-        //super.onBackPressed()
-        counter++
-        if (counter == 1){
-            super.onBackPressed()
-        }
-    }
-
     private fun dataPeliharaan() {
         mDbRef.collection("peliharaan")
             .get()
Index: app/src/main/java/com/seaID/hivet/BookingActivity.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.seaID.hivet\r\n\r\nimport android.Manifest\r\nimport android.content.Intent\r\nimport android.content.pm.PackageManager\r\nimport androidx.appcompat.app.AppCompatActivity\r\nimport android.os.Bundle\r\nimport android.util.Log\r\nimport android.view.View\r\nimport android.widget.AdapterView\r\nimport android.widget.ArrayAdapter\r\nimport android.widget.Spinner\r\nimport android.widget.Toast\r\nimport androidx.core.app.ActivityCompat\r\nimport androidx.core.content.ContextCompat\r\nimport com.bumptech.glide.Glide\r\nimport com.google.android.gms.common.internal.service.Common\r\nimport com.google.firebase.auth.FirebaseAuth\r\nimport com.google.firebase.firestore.*\r\nimport com.midtrans.sdk.corekit.callback.TransactionFinishedCallback\r\nimport com.midtrans.sdk.corekit.core.MidtransSDK\r\nimport com.midtrans.sdk.corekit.core.PaymentMethod\r\nimport com.midtrans.sdk.corekit.core.TransactionRequest\r\nimport com.midtrans.sdk.corekit.core.UIKitCustomSetting\r\nimport com.midtrans.sdk.corekit.core.themes.CustomColorTheme\r\nimport com.midtrans.sdk.corekit.models.CustomerDetails\r\nimport com.midtrans.sdk.corekit.models.snap.Gopay\r\nimport com.midtrans.sdk.corekit.models.snap.Shopeepay\r\nimport com.midtrans.sdk.corekit.models.snap.TransactionResult\r\nimport com.midtrans.sdk.uikit.SdkUIFlowBuilder\r\nimport com.seaID.hivet.databinding.ActivityBookingBinding\r\nimport com.midtrans.sdk.corekit.BuildConfig.BASE_URL\r\n\r\nimport com.google.android.gms.common.internal.service.Common.CLIENT_KEY\r\nimport com.google.firebase.database.DataSnapshot\r\nimport com.google.firebase.database.DatabaseError\r\nimport com.google.firebase.database.FirebaseDatabase\r\nimport com.google.firebase.database.ValueEventListener\r\nimport com.seaID.hivet.models.*\r\n\r\nclass BookingActivity : AppCompatActivity(), AdapterView.OnItemSelectedListener{\r\n\r\n    private lateinit var mAuth : FirebaseAuth\r\n    private lateinit var binding: ActivityBookingBinding\r\n    private lateinit var db : FirebaseFirestore\r\n    val pets = ArrayList<String>()\r\n    var text: String ?= null\r\n    var counter : Int = 0\r\n    private var transactionResult = TransactionResult()\r\n    private var totalProduct: Int = 123456;\r\n    val idpets = java.util.ArrayList<String>()\r\n\r\n    override fun onCreate(savedInstanceState: Bundle?) {\r\n        super.onCreate(savedInstanceState)\r\n        binding = ActivityBookingBinding.inflate(layoutInflater)\r\n        val view = binding.root\r\n        setContentView(view)\r\n\r\n        val uId = intent.getStringExtra(\"Uid\")\r\n        val nama = intent.getStringExtra(\"Name\")\r\n        db = FirebaseFirestore.getInstance()\r\n        mAuth = FirebaseAuth.getInstance()\r\n        myPets()\r\n        showJadwal(uId.toString())\r\n        showdetailData(uId.toString())\r\n\r\n\r\n        if (ContextCompat.checkSelfPermission(this, Manifest.permission.READ_PHONE_STATE) != PackageManager.PERMISSION_GRANTED) {\r\n            ActivityCompat.requestPermissions(this,\r\n                arrayOf(Manifest.permission.READ_PHONE_STATE), 101)\r\n        }\r\n\r\n        //initMidtransSdk()\r\n        binding.reservasiBt.setOnClickListener {\r\n            val intent = Intent(this, BookingPaymentActivity::class.java)\r\n            intent.flags = Intent.FLAG_ACTIVITY_NEW_TASK or Intent.FLAG_ACTIVITY_CLEAR_TASK\r\n            intent.putExtra(\"userid\", mAuth.currentUser!!.uid)\r\n            intent.putExtra(\"pet\", idpets.get(binding.mypetS.selectedItemId.toInt()))\r\n            intent.putExtra(\"drh\", uId)\r\n            intent.putExtra(\"name\", nama)\r\n            intent.putExtra(\"tanggal\", binding.tanggalap.text)\r\n            intent.putExtra(\"slot\", \"\")\r\n            startActivity(intent)\r\n        }\r\n    }\r\n\r\n    private fun showJadwal(uid: String) {\r\n\r\n        val reference = FirebaseDatabase.getInstance().getReference()\r\n        reference.child(\"janjiTemu\").child(uid)\r\n            .addValueEventListener(object : ValueEventListener {\r\n                override fun onDataChange(snapshot: DataSnapshot) {\r\n                    val data= snapshot.getValue(jadwal::class.java)\r\n                    if (data != null){\r\n                        binding.startTV.setText(data.start+\"-\"+data.end)\r\n                    }\r\n                }\r\n                override fun onCancelled(error: DatabaseError) {\r\n                    throw error.toException()\r\n                }\r\n\r\n            })\r\n    }\r\n\r\n    override fun onBackPressed() {\r\n        //super.onBackPressed()\r\n        counter++\r\n        if (counter == 1){\r\n            super.onBackPressed()\r\n        }\r\n    }\r\n\r\n    private fun showdetailData(id : String) {\r\n        val uidRef  = db.collection(\"drh\").document(id)\r\n\r\n        uidRef.get().addOnSuccessListener { doc ->\r\n            if (doc != null) {\r\n                val user = doc.toObject(drh::class.java)\r\n                binding.namedrhTV.setText(user!!.Name)\r\n                binding.workexpTV.text = user!!.alamat\r\n                binding.tanggalap.text = user!!.booking\r\n                binding.tempatklinik.text = user!!.alamat\r\n                if (user!!.photoProfile == \"\"){\r\n                    binding.photodrh.setImageResource(R.drawable.profile)\r\n                }else{\r\n                    Glide.with(this).load(user!!.photoProfile).into(binding.photodrh)\r\n                }\r\n            } else {\r\n                Toast.makeText(this, \"No such document\", Toast.LENGTH_SHORT).show()\r\n            }\r\n        }.addOnFailureListener { exception ->\r\n            Toast.makeText(this, \"get failed with \"+exception, Toast.LENGTH_SHORT).show()\r\n        }\r\n    }\r\n\r\n    private fun myPets(){\r\n        db.collection(\"peliharaan\")\r\n            .get()\r\n            .addOnSuccessListener {\r\n                val data = it.toObjects(peliharaan::class.java)\r\n                val items = data.size\r\n                if (items > 0){\r\n                    for (item in data){\r\n                        if (item.pemilik == mAuth.uid){\r\n                            pets.add(item.nama!!)\r\n                            idpets.add(item.id!!)\r\n                        }\r\n                    }\r\n                }\r\n                val adapter = ArrayAdapter<String>(this, android.R.layout.simple_spinner_item, pets)\r\n                adapter.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item)\r\n                binding.mypetS.adapter = adapter\r\n                binding.mypetS.onItemSelectedListener = this\r\n            }\r\n    }\r\n\r\n    override fun onItemSelected(parent: AdapterView<*>?, view: View?, position: Int, id: Long) {\r\n        text= parent?.getItemAtPosition(position).toString()\r\n    }\r\n\r\n    override fun onNothingSelected(p0: AdapterView<*>?) {\r\n        TODO(\"Not yet implemented\")\r\n    }\r\n\r\n}\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/seaID/hivet/BookingActivity.kt b/app/src/main/java/com/seaID/hivet/BookingActivity.kt
--- a/app/src/main/java/com/seaID/hivet/BookingActivity.kt	(revision 7c4fdbb4fd3fef4f939930c40ebb82f1ab55ab94)
+++ b/app/src/main/java/com/seaID/hivet/BookingActivity.kt	(date 1649170249689)
@@ -103,11 +103,13 @@
     }
 
     override fun onBackPressed() {
-        //super.onBackPressed()
-        counter++
-        if (counter == 1){
-            super.onBackPressed()
-        }
+        val intent = Intent(this, ListDokterActivity::class.java)
+        intent.flags = Intent.FLAG_ACTIVITY_NEW_TASK or Intent.FLAG_ACTIVITY_CLEAR_TASK
+        intent.putExtra("type", 2)
+        intent.putExtra("tanggal", binding.tanggalap.text)
+        intent.putExtra("daerah", binding.workexpTV.text)
+        startActivity(intent)
+        finish()
     }
 
     private fun showdetailData(id : String) {
Index: app/src/main/java/com/seaID/hivet/EditProfileActivity.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.seaID.hivet\r\n\r\nimport android.Manifest\r\nimport android.content.Intent\r\nimport android.content.pm.PackageManager\r\nimport android.graphics.Bitmap\r\nimport android.net.Uri\r\nimport androidx.appcompat.app.AppCompatActivity\r\nimport android.os.Bundle\r\nimport android.provider.MediaStore\r\nimport android.view.View\r\nimport android.widget.Toast\r\nimport androidx.core.app.ActivityCompat\r\nimport androidx.core.content.ContextCompat\r\nimport com.bumptech.glide.Glide\r\nimport com.google.android.gms.tasks.OnFailureListener\r\nimport com.google.android.gms.tasks.OnSuccessListener\r\nimport com.google.firebase.auth.FirebaseAuth\r\nimport com.google.firebase.auth.FirebaseUser\r\nimport com.google.firebase.firestore.FirebaseFirestore\r\nimport com.google.firebase.storage.FirebaseStorage\r\nimport com.google.firebase.storage.StorageReference\r\nimport com.google.firebase.storage.UploadTask\r\nimport com.seaID.hivet.models.User\r\nimport com.seaID.hivet.databinding.ActivityEditProfileBinding\r\nimport java.io.IOException\r\nimport java.util.*\r\n\r\nclass EditProfileActivity : AppCompatActivity() {\r\n\r\n    private var filePath : Uri? = null\r\n    private final val PICK_IMAGE_REQUEST : Int = 2020\r\n\r\n    companion object {\r\n        private const val CAMERA_PERMISSION_CODE = 100\r\n        private const val STORAGE_PERMISSION_CODE = 101\r\n    }\r\n\r\n    private lateinit var binding: ActivityEditProfileBinding\r\n\r\n    private lateinit var mAuth: FirebaseUser\r\n    private lateinit var mDbRef: FirebaseFirestore\r\n    private lateinit var storage : FirebaseStorage\r\n    private lateinit var storageRef : StorageReference\r\n\r\n    private var photo : String ?= null\r\n    var counter : Int = 0\r\n    var type : Int ?= null\r\n\r\n    override fun onCreate(savedInstanceState: Bundle?) {\r\n        super.onCreate(savedInstanceState)\r\n        binding = ActivityEditProfileBinding.inflate(layoutInflater)\r\n        val view = binding.root\r\n        setContentView(view)\r\n\r\n        mAuth = FirebaseAuth.getInstance().currentUser!!\r\n        mDbRef = FirebaseFirestore.getInstance()\r\n\r\n\r\n        storage = FirebaseStorage.getInstance()\r\n        storageRef = storage.reference\r\n\r\n        val type = intent.getIntExtra(\"type\", 0)\r\n        val email = intent.getStringExtra(\"email\")\r\n        val uid = mAuth.uid\r\n        val foto = intent.getStringExtra(\"pho\")\r\n        if (type == 2){\r\n            binding.saveBTN.visibility = View.VISIBLE\r\n            showDataUser()\r\n        }else if (type == 1){\r\n            binding.saveBTN.visibility = View.VISIBLE\r\n            binding.emailTV.setText(email)\r\n        }\r\n\r\n\r\n\r\n        binding.userImage.setOnClickListener{\r\n            chooseImage()\r\n        }\r\n\r\n        binding.saveBTN.setOnClickListener {\r\n\r\n            if (filePath.toString() == foto){\r\n                updateDataUser()\r\n            }else{\r\n                uploadImage()\r\n                updateDataUser()\r\n            }\r\n            binding.progressBar.visibility = View.VISIBLE\r\n        }\r\n\r\n        Toast.makeText(this, \"This \" +photo, Toast.LENGTH_SHORT).show()\r\n    }\r\n\r\n\r\n    override fun onBackPressed() {\r\n        counter ++\r\n        if (counter == 1){\r\n            startActivity(Intent(this, UserProfileActivity::class.java))\r\n        }\r\n    }\r\n\r\n    // Function to check and request permission.\r\n    private fun checkPermission(permission: String, requestCode: Int) {\r\n        if (ContextCompat.checkSelfPermission(this, permission) == PackageManager.PERMISSION_DENIED) {\r\n\r\n            // Requesting the permission\r\n            ActivityCompat.requestPermissions(this, arrayOf(permission), requestCode)\r\n        } else {\r\n            //Toast.makeText(this, \"Permission already granted\", Toast.LENGTH_SHORT).show()\r\n        }\r\n    }\r\n\r\n    // This function is called when the user accepts or decline the permission.\r\n    // Request Code is used to check which permission called this function.\r\n    // This request code is provided when the user is prompt for permission.\r\n    override fun onRequestPermissionsResult(requestCode: Int,\r\n                                            permissions: Array<String>,\r\n                                            grantResults: IntArray) {\r\n        super.onRequestPermissionsResult(requestCode, permissions, grantResults)\r\n        if (requestCode == EditProfileActivity.CAMERA_PERMISSION_CODE) {\r\n            if (grantResults.isNotEmpty() && grantResults[0] == PackageManager.PERMISSION_GRANTED) {\r\n                //Toast.makeText(this, \"Camera Permission Granted\", Toast.LENGTH_SHORT).show()\r\n            } else {\r\n                Toast.makeText(this, \"Camera Permission Denied\", Toast.LENGTH_SHORT).show()\r\n            }\r\n        } else if (requestCode == EditProfileActivity.STORAGE_PERMISSION_CODE) {\r\n            if (grantResults.isNotEmpty() && grantResults[0] == PackageManager.PERMISSION_GRANTED) {\r\n                //Toast.makeText(this, \"Storage Permission Granted\", Toast.LENGTH_SHORT).show()\r\n            } else {\r\n                Toast.makeText(this, \"Storage Permission Denied\", Toast.LENGTH_SHORT).show()\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n    private fun showDataUser(){\r\n        checkPermission(\r\n            Manifest.permission.READ_EXTERNAL_STORAGE,\r\n            EditProfileActivity.STORAGE_PERMISSION_CODE\r\n        )\r\n\r\n        val uidRef  = mDbRef.collection(\"users\").document(mAuth.uid)\r\n        uidRef.get().addOnSuccessListener { doc ->\r\n            if (doc != null) {\r\n                val user = doc.toObject(User::class.java)\r\n                binding.nameTV.setText(user!!.name)\r\n                binding.emailTV.setText(user!!.email)\r\n                photo = user!!.photoProfile\r\n                if (user!!.photoProfile == \"\" || user!!.photoProfile == null){\r\n                    binding.userImage.setImageResource(R.drawable.profile)\r\n                }else{\r\n                    Glide.with(this).load(user!!.photoProfile).into(binding.userImage)\r\n                }\r\n                //Toast.makeText(this, \"{$user.name}\", Toast.LENGTH_SHORT).show()\r\n            } else {\r\n                Toast.makeText(this, \"No such document \", Toast.LENGTH_SHORT).show()\r\n            }\r\n        }.addOnFailureListener { exception ->\r\n            Toast.makeText(this, \"get failed with \"+exception, Toast.LENGTH_SHORT).show()\r\n        }\r\n    }\r\n\r\n    private fun chooseImage(){\r\n        val intent: Intent = Intent()\r\n        intent.type = \"image/*\"\r\n        intent.action = Intent.ACTION_GET_CONTENT\r\n        startActivityForResult(Intent.createChooser(intent, \"Select Image\"), PICK_IMAGE_REQUEST)\r\n    }\r\n\r\n    override fun onActivityResult(requestCode: Int, resultCode: Int, data: Intent?) {\r\n        super.onActivityResult(requestCode, resultCode, data)\r\n        if (requestCode == PICK_IMAGE_REQUEST && resultCode != null){\r\n            filePath = data!!.data\r\n            try {\r\n                var bitmap:Bitmap = MediaStore.Images.Media.getBitmap(contentResolver, filePath)\r\n                binding.userImage.setImageBitmap(bitmap)\r\n            }catch (e:IOException){\r\n                e.printStackTrace()\r\n            }\r\n        }\r\n    }\r\n\r\n    private fun uploadImage(){\r\n        if(filePath != null){\r\n\r\n            var ref:StorageReference = storageRef.child(\"Image/\"+mAuth.uid)\r\n            ref.putFile(filePath!!)\r\n                .addOnSuccessListener {\r\n                        binding.progressBar.visibility = View.GONE\r\n                        //Toast.makeText(this, \"Uploaded\", Toast.LENGTH_SHORT).show()\r\n                        binding.saveBTN.visibility = View.GONE\r\n                }\r\n                .addOnFailureListener {\r\n                    OnFailureListener{\r\n                        binding.progressBar.visibility = View.GONE\r\n                        Toast.makeText(this, \"Failed \"+it.message, Toast.LENGTH_SHORT).show()\r\n                    }\r\n                }\r\n        }\r\n    }\r\n\r\n    private fun deleteImage(photo : String) {\r\n        val photoRef: StorageReference = storageRef.child(\"Image/\"+mAuth.uid)\r\n        photoRef.delete().addOnSuccessListener {\r\n            //Toast.makeText(this, \"onSuccess: deleted file\", Toast.LENGTH_SHORT).show()\r\n        }\r\n            .addOnFailureListener {\r\n                Toast.makeText(this, \"onFailure: did not delete file\", Toast.LENGTH_SHORT).show()\r\n            }\r\n    }\r\n\r\n    private fun updateDataUser(){\r\n        val name = binding.nameTV.text.toString()\r\n        val email = binding.emailTV.text.toString()\r\n        val foto : String\r\n\r\n        if (filePath != null){\r\n            foto = filePath.toString()\r\n        }else if (binding.userImage.resources != null){\r\n            foto = binding.userImage.resources.toString()\r\n        }else{\r\n            foto = \"\"\r\n        }\r\n\r\n        val useredit = User(name, email, mAuth.uid, foto)\r\n\r\n        val user = mDbRef.collection(\"users\")\r\n        user.document(mAuth.uid).set(useredit)\r\n        startActivity(Intent(this, MainActivity::class.java))\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/seaID/hivet/EditProfileActivity.kt b/app/src/main/java/com/seaID/hivet/EditProfileActivity.kt
--- a/app/src/main/java/com/seaID/hivet/EditProfileActivity.kt	(revision 7c4fdbb4fd3fef4f939930c40ebb82f1ab55ab94)
+++ b/app/src/main/java/com/seaID/hivet/EditProfileActivity.kt	(date 1649149168097)
@@ -94,10 +94,8 @@
 
 
     override fun onBackPressed() {
-        counter ++
-        if (counter == 1){
-            startActivity(Intent(this, UserProfileActivity::class.java))
-        }
+        startActivity(Intent(this, UserProfileActivity::class.java))
+        finish()
     }
 
     // Function to check and request permission.
Index: app/src/main/java/com/seaID/hivet/BookingBerhasilActivity.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.seaID.hivet\r\n\r\nimport androidx.appcompat.app.AppCompatActivity\r\nimport android.os.Bundle\r\nimport android.util.Log\r\nimport android.widget.Toast\r\nimport com.bumptech.glide.Glide\r\nimport com.google.firebase.firestore.FirebaseFirestore\r\nimport com.seaID.hivet.databinding.ActivityBookingBerhasilBinding\r\nimport com.seaID.hivet.databinding.ActivityUserProfileBinding\r\nimport com.seaID.hivet.models.User\r\nimport com.seaID.hivet.models.booking\r\nimport com.seaID.hivet.models.drh\r\n\r\nclass BookingBerhasilActivity : AppCompatActivity() {\r\n\r\n    private lateinit var bBinding : ActivityBookingBerhasilBinding\r\n    private lateinit var mDbRef: FirebaseFirestore\r\n\r\n    override fun onCreate(savedInstanceState: Bundle?) {\r\n        super.onCreate(savedInstanceState)\r\n        bBinding = ActivityBookingBerhasilBinding.inflate(layoutInflater)\r\n        val view = bBinding.root\r\n        setContentView(view)\r\n\r\n        mDbRef = FirebaseFirestore.getInstance()\r\n        loadData(intent.getStringExtra(\"kode_booking\"))\r\n\r\n\r\n    }\r\n\r\n    private fun loadData(kode_booking: String?) {\r\n\r\n        val app  = mDbRef.collection(\"booking_appointments\").document(kode_booking.toString())\r\n\r\n        app.get().addOnSuccessListener { doc ->\r\n            if (doc != null) {\r\n                val data = doc.toObject(booking::class.java)\r\n                //mybinding.namauTV.text = user!!.name\r\n                //mybinding.emailTV.text = user!!.email\r\n                showdrh(data!!.drh_id)\r\n                bBinding.kodeBooking.text = data!!.kode_booking\r\n                bBinding.waktukonsul.text = data!!.waktu\r\n                bBinding.tanggalap.text = data!!.tanggal\r\n                //Log.d(UserProfileActivity.TAG, \"{$user.name}\")\r\n            } else {\r\n                Toast.makeText(this,\"No such document\",  Toast.LENGTH_SHORT).show()\r\n            }\r\n        }.addOnFailureListener { exception ->\r\n            Toast.makeText(this,\"get failed with \"+ exception,  Toast.LENGTH_SHORT).show()\r\n            //Log.d(UserProfileActivity.TAG, \"get failed with \" +exception,)\r\n        }\r\n\r\n    }\r\n\r\n    private fun showdrh(drhId: String?) {\r\n        val appp  = mDbRef.collection(\"drh\").document(drhId.toString())\r\n\r\n        appp.get().addOnSuccessListener { doc ->\r\n            if (doc != null) {\r\n                val data = doc.toObject(drh::class.java)\r\n\r\n                bBinding.namedrhTV.text = data!!.Name\r\n                bBinding.tempatPraktikTV.text = data!!.tempat\r\n\r\n                //Log.d(UserProfileActivity.TAG, \"{$user.name}\")\r\n            } else {\r\n                //Log.d(UserProfileActivity.TAG, \"No such document\")\r\n                Toast.makeText(this,\"No such document\",  Toast.LENGTH_SHORT).show()\r\n            }\r\n        }.addOnFailureListener { exception ->\r\n            Toast.makeText(this,\"get failed with \"+ exception,  Toast.LENGTH_SHORT).show()\r\n            //Log.d(UserProfileActivity.TAG, \"get failed with \" +exception,)\r\n        }\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/seaID/hivet/BookingBerhasilActivity.kt b/app/src/main/java/com/seaID/hivet/BookingBerhasilActivity.kt
--- a/app/src/main/java/com/seaID/hivet/BookingBerhasilActivity.kt	(revision 7c4fdbb4fd3fef4f939930c40ebb82f1ab55ab94)
+++ b/app/src/main/java/com/seaID/hivet/BookingBerhasilActivity.kt	(date 1649148848769)
@@ -1,5 +1,6 @@
 package com.seaID.hivet
 
+import android.content.Intent
 import androidx.appcompat.app.AppCompatActivity
 import android.os.Bundle
 import android.util.Log
@@ -29,6 +30,11 @@
 
     }
 
+    override fun onBackPressed() {
+        startActivity(Intent(this, MainActivity::class.java))
+        finish()
+    }
+
     private fun loadData(kode_booking: String?) {
 
         val app  = mDbRef.collection("booking_appointments").document(kode_booking.toString())
